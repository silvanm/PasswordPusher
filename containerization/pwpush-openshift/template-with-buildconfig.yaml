apiVersion: v1
kind: Template
metadata:
  name: passwordpusher
  annotations:
    openshift.io/display-name: "Passwordpusher"
    description: "send passwords securely over web"
    iconClass: "icon-rails"
    tags: "utility"
parameters:
labels:
  template: passwordpusher
  app: passwordpusher


objects:

- apiVersion: v1
  kind: Service
  metadata:
    name: passwordpusher
    labels:
      app: passwordpusher
  spec:
    selector:
      app: passwordpusher
    ports:
    - name: passwordpusher-service
      port: 443
      protocol: TCP
      targetPort: 5000


- apiVersion: v1
  kind: Route
  metadata:
    name: passwordpusher
    labels:
      app: passwordpusher
  spec:
    to:
      name: passwordpusher

- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/display-name: passwordpusher
    name: passwordpusher

- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: passwordpusher
  spec:
    runPolicy: Serial
    triggers:
      - type: ConfigChange
    source:
      git:
        uri: https://github.com/pglombardo/PasswordPusher.git
    strategy:
      dockerStrategy:
        dockerfilePath: containerization/pwpush-openshift/Dockerfile
    output:
      to:
        kind: ImageStreamTag
        name: passwordpusher:latest

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: passwordpusher
    labels:
      app: passwordpusher
  spec:
    replicas: 1
    triggers:
      - type: ConfigChange
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
          - passwordpusher
          from:
            kind: ImageStreamTag
            name: passwordpusher:latest
    strategy:
      type: Rolling
    revisionHistoryLimit: 1
    template:
      metadata:
        labels:
          app: passwordpusher
      spec:
        containers:
        - name: passwordpusher
          image: passwordpusher:latest
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
                - touch
                - /tmp/health
            initialDelaySeconds: 15
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: /
              port: 5000
            initialDelaySeconds: 15
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 200m
              memory: 1Gi
            limits:
              cpu: 500m
              memory: 2Gi
        restartPolicy: Always
